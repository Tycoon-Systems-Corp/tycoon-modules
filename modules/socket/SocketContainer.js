import{initialize}from"../utility/socket/index";import React,{useRef,useEffect}from"react";const SocketContainer=s=>{const l=s["_socket"];let n=useRef(!1);useRef(null);const[i,c]=React.useState(null),e=(useEffect(()=>{!n.current&&s._loggedIn&&s.dborigin&&e()},[l,n.current,s._loggedIn,s.dborigin]),()=>new Promise((e,o)=>{l.connected&&s._loggedIn&&s.dborigin&&initialize(l,s._loggedIn,s.dborigin),l.on("connect",e=>{console.log("Connected to socket ∞¦∞",l),n.current=!0,setTimeout(()=>{initialize(l,s._loggedIn,s.dborigin)},300)},{reconnectionAttempts:5}),l.on("disconnect",e=>{console.log("Disconnected from socket",l),i||"io server disconnect"===e&&(n.current=!1,e=setTimeout(()=>{l.connect(),c(null)},5e3),c(e))}),l.on("connect_error",e=>{console.log("Connection failed",e),n.current=!1;e=setTimeout(()=>{t(),c(null)},5e3);c(e)});let t=(e=5e3)=>{setTimeout(()=>{l.connect()},e)};return e()}));return useEffect(()=>{if(l){const e=e=>{console.log(e),s.setRooms&&s.setRooms(e)},o=e=>{console.log(e)};const t=e=>{s.setRooms&&(console.log("Rooms",e),s.setRooms(e)),setTimeout(()=>{e?.log&&s._LocalEventEmitter.dispatch("receive_chat",e.log)},250)},n=e=>{console.log("Receive",e),e?.log&&s._LocalEventEmitter.dispatch("receive_chat",e.log)},i=e=>{console.log(e),e?.tables&&s._LocalEventEmitter.dispatch("receive_ban_table",e.tables)},c=e=>{e&&s._LocalEventEmitter.dispatch("scraper_updates",e)},r=e=>{e&&s._LocalEventEmitter.dispatch("incoming_authorization_ask",e)};return l.on("returnInitialize",e),l.on("returnNotify",o),l.on("joinChat",t),l.on("receiveChat",n),l.on("receiveBanTable",i),l.on("scraperUpdates",c),l.on("uploadUpdate",e=>{s._LocalEventEmitter.dispatch("uploadUpdate",e)}),l.on("incomingAuthorizationAsk",r),()=>{l.off("returnInitialize",e),l.off("returnNotify",o),l.off("joinChat",t),l.off("receiveChat",n),l.off("receiveBanTable",i),l.off("scraperUpdates",c),l.off("incomingAuthorizationAsk",r)}}},[s._loggedIn,s.setRooms]),React.createElement("div",null)};export default SocketContainer;